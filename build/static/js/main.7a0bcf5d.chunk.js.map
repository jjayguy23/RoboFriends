{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAACC,GACb,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,gCACC,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCcCC,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEAA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACA,cAAC,EAAD,CAEAP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHZK,SCKOC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKb,UAAU,MAAf,SACA,uBACCA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCEI,EARA,SAAClB,GACf,OACA,qBAAKmB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEtB,EAAMuB,YCkBOC,E,kDApBd,WAAYxB,GAAQ,IAAD,8BAClB,cAAMA,IACDyB,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAW,M,oBAI9B,WACC,OAAIG,KAAKJ,MAAMC,SACP,2DAEDG,KAAK7B,MAAMuB,a,GAjBSQ,aC6CZC,G,wDAvCf,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACZjB,OAAQ,GACRK,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBwB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,oBAOzC,WACC,MAAgCZ,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV6B,EAAgBlC,EAAOmC,QAAO,SAAAnC,GACnC,OAAOA,EAAOH,KAAKuC,cAAcC,SAAShC,EAAY+B,kBAEvD,OAAQpC,EAAOsC,OAGd,sBAAK7C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQkC,WAPpB,6C,GAzBeX,cCKHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.7a0bcf5d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${props.id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{props.name}</h2>\n\t\t\t\t<p>{props.email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n} \n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<div>\n\t\t{\n\t\trobots.map((user, i) => {\n\t\t\treturn (\n\t\t\t<Card \n\t\t\tkey={i} \n\t\t\tid={robots[i].id} \n\t\t\tname={robots[i].name} \n\t\t\temail={robots[i].email}\n\t\t\t/>\n\t\t\t); \n\t\t})\n\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList; ","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t<input \n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\ttype='search' \n\t\t\tplaceholder='search robots'\n\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t<div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n\t\t{props.children}\n\t</div>\n\t);\n};\n\nexport default Scroll;\n\n"," import React, { Component } from 'react';\n\n class ErrorBoundry extends Component {\n \tconstructor(props) {\n \t\tsuper(props);\n \t\tthis.state = {\n \t\t\thasError: false\n \t\t}\n \t}\n\n \tcomponentDidCatch(error, info) {\n \t\tthis.setState({ hasError : true })\n \t}\n \n\nrender () {\n\tif (this.state.hasError) {\n\t\treturn <h1>Oooops. That is not good.</h1>\n\t}\n\treturn this.props.children\n}\n}\n\n export default ErrorBoundry","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component { \n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: '',\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response=> response.json()) \n\t\t\t.then(users => this.setState({ robots: users}));\n\t}\n\n\tonSearchChange = (event) =>  {\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst { robots, searchfield } = this.state;\n\t\tconst filteredRobots =robots.filter(robots =>{\n\t\t\treturn robots.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t}) \n\t\treturn !robots.length ?\n\t\t <h1>Loading</h1> :\n\t\t(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f2'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n}\n \n export default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); \n"],"sourceRoot":""}